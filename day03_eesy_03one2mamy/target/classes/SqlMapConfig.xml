<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <!--配置properties
        可以在标签内部配置连接数据库的信息，也可以通过属性引用外部配置文件信息
        resource属性： 常用的
            用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下
        url属性：
            是要求按照url的写法来写地址
            url，uniform resource locator 统一资源定位符。它是可以唯一标识一个资源路径
            它的写法：
                http://localhost:8080/mybatisserver/demo1Servlet
                协议       主机    端口      uri
             uri，它可以在应用中唯一定位一个资源
    -->
    <properties resource="jdbcConfig.properties">

    </properties>

<!--    使用typeAliases配置别名，他只能配置domain中类的别名-->

    <typeAliases>
<!--        <typeAlias type="com.itheima.domain.User" alias="user"></typeAlias>-->
<!--        用于指定要配置别名的包，当指定之后，该包下的实体类都会注册别名，并且类名就是别名，不在区分大小写-->
        <package name="com.itheima.domain"/>
    </typeAliases>
    <!-- 配置环境-->
    <environments default="mysql">
        <!--配置mysql环境-->
        <environment id="mysql">
            <!--配置事务环境-->
            <transactionManager type="JDBC"></transactionManager>
            <!--配置数据源（连接池）-->
            <dataSource type="POOLED">
                <!--配置连接数据库的四个基本信息-->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--    指定映射配置文件位置，映射配置文件指的是每个dao独立的配置文件-->
    <mappers>
<!--        <mapper resource="com/itheima/dao/IUserDao.xml"></mapper>-->
<!--        package标签用于指定dao接口所在的包,当指定完成之后就不需要再写mapper以及resource和class-->
        <package name="com.itheima.dao"/>
    </mappers>
</configuration>